name: Java CI Pipeline

on:
  push:
    branches: [ "Alexsa7161-new_test" ]
  pull_request:
    branches: [ "Alexsa7161-new_test" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar-ready: ${{ steps.jar.outputs.ready }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot jar
        run: mvn clean package -DskipTests

      - name: Set flag if jar exists
        id: jar
        run: |
          if [ -f target/fitness-server-0.0.1-SNAPSHOT.jar ]; then
            echo "ready=true" >> $GITHUB_OUTPUT
          else
            echo "ready=false" >> $GITHUB_OUTPUT
          fi

  client_setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set default NPM registry
        run: npm config set registry https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Build client
        run: npm run build

      - name: Upload client artifacts (node_modules + dist)
        uses: actions/upload-artifact@v4
        with:
          name: client-artifact
          path: |
            client/node_modules
            client/dist
            client/.next  # включить, если используется Next.js

  client_test:
    runs-on: ubuntu-latest
    needs: client_setup
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
  
      - name: Install dependencies
        run: npm ci
  
      - name: Run client tests
        run: npm test -- --watchAll=false

  test:
    runs-on: ubuntu-latest
    needs: [build, client_test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          docker compose -f docker-compose.yml up -d
          docker ps

      - name: Wait for Kafka to become available
        run: |
          echo "Waiting for Kafka to be ready..."
          for i in {1..12}; do
            if docker exec fitnessserver-kafka-1-1 kafka-topics --bootstrap-server localhost:9092 --list; then
              echo "Kafka is ready!"
              break
            fi
            echo "Waiting for Kafka... Attempt $i"
            sleep 10
          done

      - name: Create Kafka topics
        run: |
          docker exec fitnessserver-kafka-1-1 kafka-topics --create --topic heart-rate-topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 || true
          docker exec fitnessserver-kafka-1-1 kafka-topics --create --topic location-topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 || true
          docker exec fitnessserver-kafka-1-1 kafka-topics --create --topic steps-topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 || true
          docker exec fitnessserver-kafka-1-1 kafka-topics --create --topic battery-topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 || true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot jar (again for context)
        run: mvn clean package -DskipTests

      - name: Run Spring Boot app in background
        run: java -jar target/fitness-server-*.jar &

      - name: Wait for Spring Boot app to become available
        run: |
          echo "Waiting for Spring Boot to be ready..."
          for i in {1..20}; do
            if curl -s http://localhost:8080/actuator/health | grep UP; then
              echo "Spring Boot is ready!"
              break
            fi
            echo "Waiting..."
            sleep 5
          done

      - name: Run Maven tests
        run: mvn test

  cleanup:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Tear down Docker containers
        run: docker compose -f docker-compose.yml down
