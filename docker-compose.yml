version: '3.8'

services:
  postgres:
    image: postgres:15
    networks:
      - eventhub-net
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d

  flink-jobmanager:
    image: flink:latest
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
      - "6123:6123"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    command: jobmanager
    networks:
      - eventhub-net

  flink-taskmanager:
    image: flink:latest
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    command: taskmanager
    networks:
      - eventhub-net

  fitness-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8085:8085"           # backend порт (измените, если нужно)
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
    depends_on:
      - postgres
    networks:
      - eventhub-net

  fitness-client:
    build:
      context: ./client      # Папка с фронтендом
      dockerfile: Dockerfile # Если нужен, или используйте стандартный (см. ниже)
    ports:
      - "3000:80"          # фронтенд доступен на порту 3000
    depends_on:
      - fitness-app
    networks:
      - eventhub-net

networks:
  eventhub-net:
    driver: bridge
